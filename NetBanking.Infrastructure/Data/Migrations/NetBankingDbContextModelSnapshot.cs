// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetBanking.Infrastructure.Data;

#nullable disable

namespace NetBanking.Infrastructure.Migrations
{
    [DbContext(typeof(NetBankingDbContext))]
    partial class NetBankingDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0-preview.3.24172.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NetBanking.Core.Entitys.BankTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TransactionId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DestinationIdentifier")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IssuerUserId")
                        .HasColumnType("int");

                    b.Property<string>("OriginIdentifier")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("ReceiverUserId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime");

                    b.Property<string>("TransactionType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__BankTran__55433A6BE7901D1A");

                    b.HasIndex("IssuerUserId");

                    b.HasIndex("ReceiverUserId");

                    b.ToTable("BankTransactions", (string)null);
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.Check", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ChequeId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("CheckNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("CheckStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("IssuedDate")
                        .HasColumnType("date");

                    b.Property<string>("IssuerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ReceiverName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__Checks__B816D9F077ABDBED");

                    b.HasIndex("AccountId");

                    b.HasIndex(new[] { "CheckNumber" }, "UQ__Checks__D886A85BC1A2A720")
                        .IsUnique();

                    b.ToTable("Checks", (string)null);
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.CreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CardId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("AvailableBalance");

                    b.Property<decimal>("CreditLimit")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("DailyWithdrawalLimit")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("DailyWithdrawalLimit");

                    b.Property<DateOnly>("ExpiryDate")
                        .HasColumnType("date");

                    b.Property<string>("IdentifierNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CardNumber");

                    b.Property<DateTime?>("LastTransactionDate")
                        .HasColumnType("datetime");

                    b.Property<DateOnly>("OpeningDate")
                        .HasColumnType("date");

                    b.Property<string>("ProductStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("CreditCardStatus");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "IdentifierNumber" }, "UQ__CreditCa__A4E9FFE91010947C")
                        .IsUnique();

                    b.ToTable("CreditCards", (string)null);
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.CurrentAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("DailyWithdrawalLimit")
                        .HasColumnType("decimal(15,2)")
                        .HasColumnName("DailyWithdrawalLimit");

                    b.Property<string>("IdentifierNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("AccountNumber");

                    b.Property<DateTime?>("LastTransactionDate")
                        .HasColumnType("datetime");

                    b.Property<DateOnly>("OpeningDate")
                        .HasColumnType("date");

                    b.Property<string>("ProductStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserStatus");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "IdentifierNumber" }, "UQ__CurrentA__BE2ACD6F21F1E4F8")
                        .IsUnique();

                    b.ToTable("CurrentAccounts", (string)null);
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.Loan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("LoanId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("InterestRate")
                        .HasColumnType("decimal(15,2)");

                    b.Property<decimal>("LoanAmount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("LoanStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoanTermMonths")
                        .HasColumnType("int");

                    b.Property<decimal?>("MonthlyPayment")
                        .HasColumnType("decimal(15,2)");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK__Loans__4F5AD45783734C4E");

                    b.HasIndex("UserId");

                    b.ToTable("Loans", (string)null);
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.SavingAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AccountId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(15, 2)");

                    b.Property<decimal>("DailyWithdrawalLimit")
                        .HasColumnType("decimal(15, 2)")
                        .HasColumnName("DailyWithdrawalLimit");

                    b.Property<string>("IdentifierNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("AccountNumber");

                    b.Property<decimal?>("InterestRate")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime?>("LastTransactionDate")
                        .HasColumnType("datetime");

                    b.Property<DateOnly>("OpeningDate")
                        .HasColumnType("date");

                    b.Property<string>("ProductStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("UserStatus");

                    b.Property<string>("ProductType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex(new[] { "IdentifierNumber" }, "UQ__SavingsA__BE2ACD6FD8C51357")
                        .IsUnique();

                    b.ToTable("SavingsAccounts", (string)null);
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<DateOnly?>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateOnly>("RegistrationDate")
                        .HasColumnType("date");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("Username");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id")
                        .HasName("PK__Users__1788CC4C7C7559D2");

                    b.HasIndex(new[] { "UserName" }, "UQ__Users__536C85E4EE02EB06")
                        .IsUnique();

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D10534DFF426E4")
                        .IsUnique();

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.UserLogin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserLoginId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id")
                        .HasName("PK__UsersLog__107D568CBC9DEBFA");

                    b.ToTable("UsersLogin", (string)null);
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.VoucherDTO", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("VoucherId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(15,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("DestinationIdentifier")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("IssuerUserId")
                        .HasColumnType("int");

                    b.Property<int>("ReceiverUserId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("TransactionDate")
                        .HasColumnType("date");

                    b.HasKey("Id")
                        .HasName("PK__Vouchers__3AEE7921ED8754BD");

                    b.HasIndex("IssuerUserId");

                    b.HasIndex("ReceiverUserId");

                    b.ToTable("Vouchers", (string)null);
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.BankTransaction", b =>
                {
                    b.HasOne("NetBanking.Core.Entitys.User", "IssuerUser")
                        .WithMany("BankTransactionIssuerUsers")
                        .HasForeignKey("IssuerUserId")
                        .IsRequired()
                        .HasConstraintName("FK__BankTrans__Issue__5165187F");

                    b.HasOne("NetBanking.Core.Entitys.User", "ReceiverUser")
                        .WithMany("BankTransactionReceiverUsers")
                        .HasForeignKey("ReceiverUserId")
                        .IsRequired()
                        .HasConstraintName("FK__BankTrans__Recei__52593CB8");

                    b.Navigation("IssuerUser");

                    b.Navigation("ReceiverUser");
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.Check", b =>
                {
                    b.HasOne("NetBanking.Core.Entitys.CurrentAccount", "Account")
                        .WithMany("Checks")
                        .HasForeignKey("AccountId")
                        .IsRequired()
                        .HasConstraintName("FK__Checks__AccountI__4AB81AF0");

                    b.Navigation("Account");
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.CreditCard", b =>
                {
                    b.HasOne("NetBanking.Core.Entitys.User", "User")
                        .WithMany("CreditCards")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__CreditCar__UserI__46E78A0C");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.CurrentAccount", b =>
                {
                    b.HasOne("NetBanking.Core.Entitys.User", "User")
                        .WithMany("CurrentAccounts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__CurrentAc__UserI__403A8C7D");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.Loan", b =>
                {
                    b.HasOne("NetBanking.Core.Entitys.User", "User")
                        .WithMany("Loans")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__Loans__UserId__4316F928");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.SavingAccount", b =>
                {
                    b.HasOne("NetBanking.Core.Entitys.User", "User")
                        .WithMany("SavingsAccounts")
                        .HasForeignKey("UserId")
                        .IsRequired()
                        .HasConstraintName("FK__SavingsAc__UserI__3C69FB99");

                    b.Navigation("User");
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.VoucherDTO", b =>
                {
                    b.HasOne("NetBanking.Core.Entitys.User", "IssuerUser")
                        .WithMany("VoucherIssuerUsers")
                        .HasForeignKey("IssuerUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Vouchers__Issuer__4D94879B");

                    b.HasOne("NetBanking.Core.Entitys.User", "ReceiverUser")
                        .WithMany("VoucherReceiverUsers")
                        .HasForeignKey("ReceiverUserId")
                        .IsRequired()
                        .HasConstraintName("FK__Vouchers__Receiv__4E88ABD4");

                    b.Navigation("IssuerUser");

                    b.Navigation("ReceiverUser");
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.CurrentAccount", b =>
                {
                    b.Navigation("Checks");
                });

            modelBuilder.Entity("NetBanking.Core.Entitys.User", b =>
                {
                    b.Navigation("BankTransactionIssuerUsers");

                    b.Navigation("BankTransactionReceiverUsers");

                    b.Navigation("CreditCards");

                    b.Navigation("CurrentAccounts");

                    b.Navigation("Loans");

                    b.Navigation("SavingsAccounts");

                    b.Navigation("VoucherIssuerUsers");

                    b.Navigation("VoucherReceiverUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
